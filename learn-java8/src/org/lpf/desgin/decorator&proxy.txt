装饰模式(Decorator ['dekəreɪtə])和代理模式(Proxy ['prɒksɪ])的区别

装饰模式关注与在一个对象上动态的添加方法,然而代理模式关注于控制对象的访问,用代理模式,代理类可以对它的委托类隐藏一个对象的具体信息.
当使用代理模式时,常常在一个代理类中创建一个对象的实例. (一般是对一个对象进行代理,隐藏这个对象的具体信息)
当使用装饰模式时,通常做法是将原始对象作为一个参数传给装饰者的构造器. (一般是能够装饰多个对象)

使用代理模式,代理和真实对象之间的关系在编译时期已经确定,
使用装饰模式,装饰者能够在运行时递归的构造.